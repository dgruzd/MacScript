[[ -s "$HOME/.profile" ]] && source "$HOME/.profile" # Load the default .profile
# Setting for the new UTF-8 terminal support in Lion
#export LC_CTYPE=en_US.UTF-8
#export LC_ALL=en_US.UTF-8
export LC_CTYPE=ru_RU.UTF-8
#export LC_ALL=ru_RU.UTF-8
export LC_COLLATE=C
export PYTHON_LIB=/usr/local/Cellar/python/2.7.10_2/lib

export EDITOR=vim
alias g="mvim --remote-silent "

export DMSERVER=21

#macbook
#0 – Legacy sleep mode. It will save everything to RAM upon sleeping but does not support “Safe Sleep”. Very fast sleep.
#1 – Legacy “Safe Sleep”. This is the “Safe Sleep”. Everything your laptop goes into sleep, it will save everything to harddisk. Slow on Sleep and Startup.
#3 – Default. As described above, when sleeping, contents are saved to RAM. When battery runs out, hibernate occurs.
#5 – Behaves as 1 but applicable only for modern Mac that uses “Secure virtual memory”.
#7 – Behaves as 3 but applicable only for modern Mac that uses “Secure virtual memory”
alias hibernateon="sudo pmset -a hibernatemode 5"
alias hibernateoff="sudo pmset -a hibernatemode 3"

#easy tether
alias tetheroff='sudo kextunload /System/Library/Extensions/EasyTetherUSBEthernet.kext'
alias tetheron='sudo kextload /System/Library/Extensions/EasyTetherUSBEthernet.kext'

#export PWS="$HOME/.safe/pws"
alias pw='pws'
alias pingt="mtr "
alias mysqld='mysql.server start'

alias macsleep="osascript -e 'tell application \"System Events\" to sleep'"
alias freehd="df -h / | awk 'END {print \$4}'"

alias memcacheddm='memcached -d -p 11233'

alias pyserv='python -m SimpleHTTPServer'

alias ll='ls -al'
alias l='ls -l'
alias isop="open -a Isoplex"
alias popcorn="open -a Popcorn-Time"
#http://blog.willj.net/2011/05/31/setting-up-postgresql-for-ruby-on-rails-development-on-os-x/

# Postgresql
alias pgstart='pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start'
alias pgstop='pg_ctl -D /usr/local/var/postgres stop -s -m fast'
alias pgtest='ps auxwww | grep postgres'
alias psqlp='psql -h localhost -U postgres '
export PGDATA='/usr/local/var/postgres'
# Elasticsearch
alias elasticstart='elasticsearch -f -D es.config=/usr/local/opt/elasticsearch-0.90/config/elasticsearch.yml'
# Redis
alias redisstart='redis-server /usr/local/etc/redis.conf'
###########

# Константы цветов
COLOR_YELLOW="\[\e[33;10m\]"
COLOR_RED="\[\e[31;10m\]"
COLOR_GREEN="\[\e[32;10m\]"
COLOR_BLUE="\[\e[34;10m\]"
COLOR_NONE="\[\e[0m\]"
COLOR_NONEP="\[\e[38;0m\]"

function parse_git_branch {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}

#\h:\W \u\$
PS1="\h:\W\$(parse_git_branch)\$ "

alias sshx='export DISPLAY=:0.0 && open /Applications/Utilities/X11.app && ssh -X'
alias biggest='find ./ -type f -ls | sort -k 7 -r -n | head -10'

# ALIASES FOR FAST WORK WITH GIT
alias gs='git status '
alias ga='git add -A'
alias gap='git add -p'
alias gc='git commit '
alias gcm='git commit -m '
alias gca='git commit --amend -a '
alias gb='git branch '
alias gd='git diff '
alias go='git checkout '
alias gp='git push '
alias gpu='git pull '
alias gg='git add -A && git commit -a && git push'
alias gm='git merge --no-ff '
alias gl='git log -1 HEAD '
alias gignore='git rm -r --cached . && git add . && git commit -m ".gitignore is now working"'
alias glog='git log --pretty=format:"%h %ad | %s%d [%an]" --graph --date=short'
alias gr='git reset master $1 && git checkout -- $1'

alias rsyncmove="rsync --partial --progress --append --rsh=ssh -r -h --remove-sent-files"
alias torssh='ssh -o ProxyCommand="nc -X 4 -x localhost:9050 %h %p"'
alias torpolipo='polipo -- socksParentProxy=localhost:9050 diskCacheRoot="" proxyPort=8118'
alias torscreen='screen -amdS tor tor && screen -amdS polipo polipo -- socksParentProxy=localhost:9050 diskCacheRoot="" proxyPort=8118'


alias rvmu='rvm use $1@${PWD##*/} --rvmrc --create'
alias tailmac="ssh 192.168.1.2 'tail -n 0 -f ~/github/onlinetours/log/development.log'"

alias torrnas="scp ~/Downloads/*.torrent nyaa-nas:/storage/BGS/Video/XBMCtorrent/ && rm ~/Downloads/*.torrent"
alias yoump3="youtube-dl --extract-audio --audio-format mp3"

if [ -f `brew --prefix`/etc/bash_completion ]; then
    . `brew --prefix`/etc/bash_completion
fi
############################## EOF ############################
sssh(){
    # try to connect every 0.5 secs (modulo timeouts)
      while true; do command ssh "$@"; [ $? -ne 255 ] && break || sleep 0.5; done
    }
sssr(){
  sssh "$@" -t 'bash -l -c "screen -rx; bash"'
}
ssst(){
  sssh "$@" -t 'bash -l -c "tmux attach; bash"'
}

whoiss(){
  while true; do whois "$@" | less || break || sleep 2; done
  }

export HADOOP_HOME="/usr/local/Cellar/hadoop/1.2.1/libexec"
export JRUBY_OPTS='-J-Xmx2048m -J-Xms1024m -J-Xss4m -J-XX:MaxPermSize=256m -Xcompile.invokedynamic=false -J-XX:+TieredCompilation -J-XX:TieredStopAtLevel=1'
#export SBT_OPTS="-Xmx1536m -Xms512m"
#export ASSETS_MODE='nodebug'
RAILS_ENV=development


export JAVA_HOME=$(/usr/libexec/java_home)
alias permute2="open -a Permute\ 2"
alias hdtvtor="scp *.torrent nyaa-nas:/storage/BGS/Video/XBMCtorrent/ && rm *.torrent"
HOMEBREW_GITHUB_TOKEN="d643b7bf305ca1318d7a66ea51325d0b70a01c4e"
export LC_NUMERIC="C"




# Brew
export PATH=/usr/local/bin:$PATH
export PATH=/usr/local/sbin:$PATH
export PATH=/Users/nyaa/github/MacScript/Other/bin:$PATH
#export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
# Dev
export PATH="/Users/nyaa/Library/Android/sdk/platform-tools:$PATH"
export PATH="/Users/nyaa/Library/Android/sdk/tools:$PATH"
# Gnu
# export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"

# RVM
#[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

# export PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/sbin:/usr/sbin
# . ~/.nvm/nvm.sh
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" # Load RVM function
